name: Publish Docker image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_registry:
    name: Push image to Github Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version number
        run: |
          PREVIOUSTAG=$(git ls-remote --sort=v:refname --tags --refs origin | tail -n1 | sed 's/.*\///')
          PREVIOUSPATCH=$(echo "${PREVIOUSTAG}" | grep -oP '[0-9][0-9]\.[0-9][0-9]\.\K.*')
          PREVIOUSDATE=$(echo "${PREVIOUSTAG}" | grep -oP '[0-9][0-9]\.[0-9][0-9]')
          if [[ "$PREVIOUSDATE" != $(date +'%y.%m') ]]; then PATCH=0; else PATCH=$((PREVIOUSPATCH+1)); fi;
          echo "VERSION=$(date +'%y.%m').$PATCH" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.VERSION }}',
              sha: context.sha
            });

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.description=GOV.UK One Login Simulator
            org.opencontainers.image.version=${{ env.VERSION }}
          tags: |
            ${{ env.VERSION }}
            latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v1.1.4
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
