name: Pre-merge and main checks
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
  merge_group:

jobs:
  build-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get NPM version
        run: echo "Using npm:$(npm -version)"
      - name: Install dependencies
        run: npm install
      - name: Build app
        run: npm run build

  style-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run check:lint
      - name: Run prettier
        run: npm run check:pretty

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test
      - name: Report coverage
        run: npm run test:coverage
      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: sonarsource/sonarqube-scan-action@0303d6b62e310685c0e34d0b9cde218036885c4d # v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
