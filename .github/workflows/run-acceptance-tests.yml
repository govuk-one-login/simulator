name: Run Acceptance Tests

on:
  schedule:
    - cron: "0 15 * * 1-5"
  workflow_dispatch:

jobs:
  run-acceptance-tests:
    runs-on: ubuntu-latest
    env:
      TEST_USER_SUB: ${{ secrets.TEST_USER_SUB }}
      TEST_USER_EMAIL_VERIFIED: ${{ secrets.TEST_USER_EMAIL_VERIFIED }}
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      TEST_USER_PASSPORT: ${{ secrets.TEST_USER_PASSPORT }}
      TEST_USER_ADDRESS: ${{ secrets.TEST_USER_ADDRESS }}
      TEST_USER_TOTP_SECRET: ${{secrets.TEST_USER_TOTP_SECRET}}
      ENVIRONMENT: ${{secrets.ENVIRONMENT}}
      RP_CLIENT_ID: ${{secrets.RP_CLIENT_ID}}
      RP_URL: ${{secrets.RP_URL}}
      RP_PUBLIC_KEY: ${{secrets.RP_PUBLIC_KEY}}
      RP_PRIVATE_KEY: ${{secrets.RP_PRIVATE_KEY}}
    steps:
      - name: Pull repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup containers for acceptance tests
        run: docker compose --file acceptance-tests-ci.docker-compose.yaml up -d
      - name: Sleep wait for port to open
        run: |
          echo "Waiting two seconds for micro RP to start"
          sleep 2
      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV
      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get NPM version
        run: echo "Using npm:$(npm -version)"
      - name: Install dependencies
        run: npm ci
      - name: Run acceptance tests
        run: npm run acceptance-test
      - name: Notify on failure
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
          payload: |
            channel_id: "${{ secrets.SLACK_CHANNEL_ID }}"
            github_repo: "${{ github.repository }}"
            message: "Simulator acceptance tests have failed"
            aws_account: "N/A"
            level: "ERROR"
      - name: Stop Docker
        if: ${{ always() }}
        run: docker compose down
